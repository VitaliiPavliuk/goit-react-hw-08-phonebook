{"version":3,"file":"static/js/432.9ecbd8cf.chunk.js","mappings":"mPAsFA,UA9EA,WACE,IAAMA,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAAmBF,EAAAA,EAAAA,UACnBG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHV,GAELE,EAAS,YACV,GAAE,CAACA,EAAUF,IAEd,IAAMW,EAAY,mCAAG,WAAMC,GAAN,uEACnBA,EAAMC,iBAEAC,EAAW,CACfC,KAAMX,EAAaY,QAAQC,MAC3BC,MAAOZ,EAAcU,QAAQC,MAC7BE,SAAUZ,EAAiBS,QAAQC,OAGrCT,GAASY,EAAAA,EAAAA,IAAgBN,IACtBO,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,eAAsBD,EAAIE,KAAKV,KAA/B,6BACD,IACAW,OAAM,SAAAC,GACLH,EAAAA,GAAAA,MAAA,wCAA6CG,GAC9C,IAhBgB,2CAAH,sDAmBlB,OACE,4BACE,mDACA,kBAAMC,SAAUjB,EAAhB,WACE,8BACE,kCACA,kBACEkB,KAAK,OACLC,IAAK1B,EACLW,KAAK,WACLgB,YAAY,cACZC,UAAQ,QAGZ,8BACE,mCACA,kBACEH,KAAK,QACLC,IAAKxB,EACLS,KAAK,YACLgB,YAAY,wBACZC,UAAQ,QAGZ,8BACE,sCACA,kBACEH,KAAK,WACLC,IAAKvB,EACLQ,KAAK,eACLkB,UAAW,EACXD,UAAQ,QAGZ,mBACA,mBAAQH,KAAK,SAASK,SAAqB,YAAXrC,EAAhC,0BAMP,C","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { selectIsLoggedIn, selectUserStatus } from 'redux/selectors';\nimport { requestRegister } from 'redux/user/user.operations';\n\nfunction RegisterPage() {\n  const status = useSelector(selectUserStatus);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    navigate('/contacts');\n  }, [navigate, isLoggedIn]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const formData = {\n      name: nameInputRef.current.value,\n      email: emailInputRef.current.value,\n      password: passwordInputRef.current.value,\n    };\n\n    dispatch(requestRegister(formData))\n      .unwrap()\n      .then(res => {\n        toast.success(`User ${res.user.name} successfully registered!`);\n      })\n      .catch(err => {\n        toast.error(`Oops! Something went wrong... ${err}`);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Register new account!</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Name:</p>\n          <input\n            type=\"text\"\n            ref={nameInputRef}\n            name=\"userName\"\n            placeholder=\"Ivan Pupkin\"\n            required\n          />\n        </label>\n        <label>\n          <p>Email:</p>\n          <input\n            type=\"email\"\n            ref={emailInputRef}\n            name=\"userEmail\"\n            placeholder=\"ivan_pupkin@gmail.com\"\n            required\n          />\n        </label>\n        <label>\n          <p>Password:</p>\n          <input\n            type=\"password\"\n            ref={passwordInputRef}\n            name=\"userPassword\"\n            minLength={7}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\" disabled={status === 'pending'}>\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default RegisterPage;\n"],"names":["status","useSelector","selectUserStatus","isLoggedIn","selectIsLoggedIn","navigate","useNavigate","nameInputRef","useRef","emailInputRef","passwordInputRef","dispatch","useDispatch","useEffect","handleSubmit","event","preventDefault","formData","name","current","value","email","password","requestRegister","unwrap","then","res","toast","user","catch","err","onSubmit","type","ref","placeholder","required","minLength","disabled"],"sourceRoot":""}