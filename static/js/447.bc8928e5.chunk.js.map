{"version":3,"file":"static/js/447.bc8928e5.chunk.js","mappings":"kTAEaA,EAAgBC,EAAAA,GAAAA,KAAH,mIAQbC,EAASD,EAAAA,GAAAA,OAAH,yC,SCDNE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAEhBE,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvBC,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAMC,iBAEAC,EAAU,CACdC,KAAMV,EAAaW,QAAQC,MAC3BC,OAAQX,EAAcS,QAAQC,QAI9BT,EAASW,MACP,SAAAC,GAAC,OAAIA,EAAEL,KAAKM,cAAcC,SAAWR,EAAQC,KAAKM,cAAcC,MAA/D,IAVc,uBAajBC,EAAAA,GAAAA,MAAA,UAAeT,EAAQC,KAAvB,6BAbiB,mDAkBXZ,GAASqB,EAAAA,EAAAA,IAAkBV,IAAUW,SAlB1B,OAmBjBF,EAAAA,GAAAA,QAAA,yDAnBiB,kDAqBjBA,EAAAA,GAAAA,MAAA,+CArBiB,QAuBnBG,IAvBmB,0DAAH,sDA0BZA,EAAQ,WACZrB,EAAaW,QAAQC,MAAQ,GAC7BV,EAAcS,QAAQC,MAAQ,EAC/B,EAsCD,OACE,UAAClB,EAAD,CAAe4B,SAAUhB,EAAzB,WACE,8BACE,iCACA,kBACEiB,IAAKvB,EACLwB,KAAK,OACLd,KAAK,OAELe,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,8BACE,mCACA,kBACEJ,IAAKrB,EACLsB,KAAK,MACLd,KAAK,SAELe,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBACA,SAAC/B,EAAD,CAAQ4B,KAAK,SAAb,2BAGL,E,oBC/GYI,EAAS,WACpB,IAAM9B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,kDACA,kBACEyB,KAAK,OACLK,SAAU,SAAAC,GACRhC,GAASiC,EAAAA,EAAAA,GAAUD,EAAEE,OAAOpB,MAAMI,cAAcC,QACjD,MAIR,E,oBC+DD,IC1EiCgB,EAAWC,ED0E5C,GC1EiCD,EDgBjC,WACE,IAAME,GAAa/B,EAAAA,EAAAA,IAAYgC,EAAAA,IACzBC,GAASjC,EAAAA,EAAAA,IAAYkC,EAAAA,IAErBC,GAAmBnC,EAAAA,EAAAA,IAAYoC,EAAAA,IAC/B1C,GAAWC,EAAAA,EAAAA,OAEjB0C,EAAAA,EAAAA,YAAU,WACHN,GAELrC,GAAS4C,EAAAA,EAAAA,MACV,GAAE,CAAC5C,EAAUqC,IAEd,IAAMQ,EAAmB,mCAAG,WAAMC,GAAN,0FAElB9C,GAAS+C,EAAAA,EAAAA,IAAqBD,IAAWxB,SAFvB,OAGxBF,EAAAA,GAAAA,QAAA,yCAHwB,+CAKxBA,EAAAA,GAAAA,MAAA,+CALwB,wDAAH,sDASzB,OACE,4BACE,SAACrB,EAAD,IAEY,YAAXwC,IAAwB,SAACS,EAAA,EAAD,IAEI,IAA5BP,EAAiBQ,SAChB,4BACE,SAACnB,EAAD,KACA,wBACGW,EAAiBS,KAAI,SAAAvC,GACpB,OACE,2BACE,0BACE,iCADF,IACgBA,EAAQC,SAExB,0BACE,mCADF,IACkBD,EAAQI,WAE1B,SAACoC,EAAA,EAAD,CACEC,QAAS,kBAAMP,EAAoBlC,EAAQ0C,GAAlC,EACTC,QAAQ,WACRC,WAAW,SAACC,EAAA,EAAD,IAHb,sBAPO7C,EAAQ0C,GAgBpB,WAMZ,ECxE2CjB,ED0EE,SCzEd,SAAAqB,GAG5B,OAFmBnD,EAAAA,EAAAA,IAAYgC,EAAAA,KAEX,SAACH,GAAD,UAAesB,KAAY,SAAC,KAAD,CAAUC,GAAItB,GAC9D,E","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx","components/hoc/withAuthRedirect.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormSt = styled.form`\n  border: 1px solid gray;\n  width: 300px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddBtn = styled.button`\n  width: 100px;\n`;\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { selectContacts } from 'redux/selectors';\nimport { requestAddContact } from 'redux/contacts/contacts.operations';\n\nimport { ContactFormSt, AddBtn } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const nameInputRef = useRef();\n  const phoneInputRef = useRef();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const contact = {\n      name: nameInputRef.current.value,\n      number: phoneInputRef.current.value,\n    };\n\n    if (\n      contacts.some(\n        c => c.name.toLowerCase().trim() === contact.name.toLowerCase().trim()\n      )\n    ) {\n      toast.error(`${contact.name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      await dispatch(requestAddContact(contact)).unwrap();\n      toast.success(`The contact was successfully added to your phonebook!`);\n    } catch (error) {\n      toast.error(`Oops! Something went wrong... ${error}`);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    nameInputRef.current.value = '';\n    phoneInputRef.current.value = '';\n  };\n\n  // const [contactForm, setContactForm] = useState({\n  //   name: '',\n  //   number: '',\n  // });\n\n  // const handleInputChange = ({ target: { name, value } }) => {\n  //   setContactForm(prev => ({ ...prev, [name]: value.trim() }));\n  // };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n\n  //   if (\n  //     contacts.some(\n  //       c => c.name.toLowerCase() === contactForm.name.toLowerCase()\n  //     )\n  //   ) {\n  //     alert(`${contactForm.name} is already in contacts.`);\n  //     return;\n  //   }\n\n  //   const contact = {\n  //     name: contactForm.name,\n  //     number: contactForm.number,\n  //   };\n\n  //   dispatch(requestAddContact(contact));\n\n  //   e.currentTarget.reset();\n  //   reset();\n  // };\n\n  // const reset = () => {\n  //   setContactForm({ name: '', number: '' });\n  // };\n\n  return (\n    <ContactFormSt onSubmit={handleSubmit}>\n      <label>\n        <p>Name</p>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          name=\"name\"\n          // onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <input\n          ref={phoneInputRef}\n          type=\"tel\"\n          name=\"number\"\n          // onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <br />\n      <AddBtn type=\"submit\">Add contact</AddBtn>\n    </ContactFormSt>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        onChange={e => {\n          dispatch(setFilter(e.target.value.toLowerCase().trim()));\n        }}\n      />\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Button } from '@mui/material';\nimport { toast } from 'react-toastify';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { withAuthRedirect } from 'components/hoc/withAuthRedirect';\n\nimport {\n  selectContactsStatus,\n  selectIsLoggedIn,\n  selectfilteredContacts,\n} from '../redux/selectors';\nimport {\n  requestDeleteContact,\n  requestUserContacts,\n} from 'redux/contacts/contacts.operations';\n\nfunction ContactsPage() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const status = useSelector(selectContactsStatus);\n\n  const filteredContacts = useSelector(selectfilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(requestUserContacts());\n  }, [dispatch, isLoggedIn]);\n\n  const handleDeleteContact = async contacId => {\n    try {\n      await dispatch(requestDeleteContact(contacId)).unwrap();\n      toast.success(`The contact was successfully deleted!`);\n    } catch (error) {\n      toast.error(`Oops! Something went wrong... ${error}`);\n    }\n  };\n\n  return (\n    <div>\n      <ContactForm />\n\n      {status === 'pending' && <Loader />}\n\n      {filteredContacts.length !== 0 && (\n        <div>\n          <Filter />\n          <ul>\n            {filteredContacts.map(contact => {\n              return (\n                <li key={contact.id}>\n                  <p>\n                    <b>Name:</b> {contact.name}\n                  </p>\n                  <p>\n                    <b>Number:</b> {contact.number}\n                  </p>\n                  <Button\n                    onClick={() => handleDeleteContact(contact.id)}\n                    variant=\"outlined\"\n                    startIcon={<DeleteIcon />}\n                  >\n                    Delete\n                  </Button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default withAuthRedirect(ContactsPage, '/login');\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoggedIn } from 'redux/selectors';\n\nexport const withAuthRedirect = (Component, redirectTo) => {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={redirectTo} />;\n  };\n\n  return ComponentWithRedirect;\n};\n"],"names":["ContactFormSt","styled","AddBtn","ContactForm","dispatch","useDispatch","nameInputRef","useRef","phoneInputRef","contacts","useSelector","selectContacts","handleSubmit","event","preventDefault","contact","name","current","value","number","some","c","toLowerCase","trim","toast","requestAddContact","unwrap","reset","onSubmit","ref","type","pattern","title","required","Filter","onChange","e","setFilter","target","Component","redirectTo","isLoggedIn","selectIsLoggedIn","status","selectContactsStatus","filteredContacts","selectfilteredContacts","useEffect","requestUserContacts","handleDeleteContact","contacId","requestDeleteContact","Loader","length","map","Button","onClick","id","variant","startIcon","Delete","props","to"],"sourceRoot":""}